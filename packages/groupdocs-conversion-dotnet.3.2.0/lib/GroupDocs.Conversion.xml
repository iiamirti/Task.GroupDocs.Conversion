<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GroupDocs.Conversion</name>
    </assembly>
    <members>
        <member name="T:GroupDocs.Conversion.Config.ConversionConfig">
            <summary>
            Instantiate this class to set conversion configuration
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Config.ConversionConfig.#ctor">
            <summary>
            Instantiate ConversionConfig class
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Config.ConversionConfig.StoragePath">
            <summary>
            Get or Set the conversion storage path
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Config.ConversionConfig.OutputPath">
            <summary>
            Get or Set the conversion output path
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Config.ConversionConfig.LocalesPath">
            <summary>
            Get or Set the location of the Locale files
            default: the same path where the conversion assembly is located
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Config.ConversionConfig.CachePath">
            <summary>
            Get or Set the Conversion cache path
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Config.ConversionConfig.UseCache">
            <summary>
            Set either the cache should be used or not
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Config.ConversionConfig.CacheTimeOut">
            <summary>
            Cache timeout in minutes. Default value is 10.
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Cells.CellsConverter">
            <summary>
            Provide a base for a custom Cells converters. This is an abstract class.
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Converter">
            <summary>
            Provide a base for a custom converters. This is an abstract class.
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Converter.#ctor(GroupDocs.Conversion.Domain.FileDescription,GroupDocs.Conversion.Handler.Input.IInputDataHandler,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate Converter to convert file with custom <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementations
            </summary>
            <param name="fileDescription">Instance of <see cref="P:GroupDocs.Conversion.Converter.Converter.FileDescription"/></param>
            <param name="inputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> interface</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Converter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,System.String,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate Converter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileName">File name</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Converter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,GroupDocs.Foundation.Domain.FileType,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate Converter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileType">File type of the source document</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Converter.GetPageCount">
            <summary>
            Return page count of the document to be converted
            The method is abstract
            </summary>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Converter.ValidateCache(System.Int32)">
            <summary>
            Validate if item exists in cache
            </summary>
            <param name="currentPage"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Converter.CacheItemExistsHandler(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream)">
            <summary>
            Handle item if exist in cache. The method is abstract
            </summary>
            <param name="inputStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Converter.CacheItemNotExistsHandler(System.Int32,GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsOutputStream)">
            <summary>
            Handle item if not exist in cache. The method is abstract
            </summary>
            <param name="currentPage"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Converter.EnsureDocumentIsLoaded">
            <summary>
            Ensure document is loaded. The method is abstract
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Converter.AddEvaluationMessageToImage(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsOutputStream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
            <summary>
            Add evaluation message to image stream
            </summary>
            <param name="imageStream">The image to add to an avaluation message</param>
            <param name="codecInfo">Image codec info as <see cref="T:System.Drawing.Imaging.ImageCodecInfo"/></param>
            <param name="encoderParameters">Encoder parameters as <see cref="T:System.Drawing.Imaging.EncoderParameters"/></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Converter.GetPdfFileName">
            <summary>
            Return the Pdf file name when converting through pdf
            </summary>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Converter.GetImageEncoder(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Return <see cref="T:System.Drawing.Imaging.ImageCodecInfo"/> depending on <see cref="T:System.Drawing.Imaging.ImageFormat"/>
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Converter.ConversionGuid">
            <summary>
            Represents an unique conversion identifier
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Converter.InputDataHandler">
            <summary>
            Input data handler
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Converter.OutputDataHandler">
            <summary>
            Output data handler
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Converter.CacheDataHandler">
            <summary>
            Cache data handler
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Converter.FileDescription">
            <summary>
            File description
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Converter.FileStream">
            <summary>
            The file to be converted as stream
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Converter.SourceFileType">
            <summary>
            File type of the source document
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Converter.CacheFileDescription">
            <summary>
            Cache file description
            </summary>
        </member>
        <member name="E:GroupDocs.Conversion.Converter.Converter.ConversionStart">
            <summary>
            Occurs when conversion started
            </summary>
        </member>
        <member name="E:GroupDocs.Conversion.Converter.Converter.ConversionProgress">
            <summary>
            Occurs when ConversionProgress is changed
            </summary>
        </member>
        <member name="E:GroupDocs.Conversion.Converter.Converter.ConversionComplete">
            <summary>
            Occurs when conversion is complete
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Converter.OutputType">
            <summary>
            The type of the conversion result
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Converter.ConversionResultAsStream">
            <summary>
            Return <c>true</c> if the conversion result should be <see cref="T:System.IO.Stream"/> or <see cref="T:System.Collections.Generic.IEnumerable`1"/>, else return <c>false</c>
            </summary>
            <returns></returns>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Cells.CellsConverter.PagesCount">
            <summary>
            Pages count
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Cells.CellsConverter.ConversionResultStream">
            <summary>
            Converted document as stream
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Cells.CellsConverter.ConversionResultString">
            <summary>
            Converted document as file path
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Cells.CellsConverter.#ctor(GroupDocs.Conversion.Domain.FileDescription,GroupDocs.Conversion.Handler.Input.IInputDataHandler,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate CellsConverter to convert file with custom <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/>, <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementations
            </summary>
            <param name="fileDescription">Instance of <see cref="T:GroupDocs.Conversion.Domain.FileDescription"/></param>
            <param name="inputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> interface</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Cells.CellsConverter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,System.String,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate CellsConverter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileName">File name</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Cells.CellsConverter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,GroupDocs.Foundation.Domain.FileType,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate CellsConverter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileType">File type of the source document</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Cells.CellsConverter.GetPageCount">
            <summary>
            Return page count of the document to be converted
            </summary>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Cells.CellsConverter.Convert``1(GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Convert document
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cellsSaveOptions">Cells conversion options</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Cells.CellsConverter.Convert``1(GroupDocs.Conversion.Converter.Option.LoadOptions,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Convert document
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loadOptions">Document load options</param>
            <param name="cellsSaveOptions">Cells conversion options</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Cells.CellsConverter.CacheItemExistsHandler(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream)">
            <summary>
            Handle item if exist in cache
            </summary>
            <param name="inputStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Cells.CellsConverter.CacheItemNotExistsHandler(System.Int32,GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsOutputStream)">
            <summary>
            Handle item if not exist in cache
            </summary>
            <param name="currentPage"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Cells.CellsConverter.ValidateCache(System.Int32)">
            <summary>
            Validate if item exists in cache
            </summary>
            <param name="currentPage"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Cells.CellsConverter.GetCellsFormat">
            <summary>
            Get cells format
            </summary>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Cells.CellsConverter.AddEvaluationMessage(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsOutputStream)">
            <summary>
            Add evaluation message to Cells stream
            </summary>
            <param name="outputStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Cells.CellsConverter.AddWatermark(Aspose.Cells.Workbook)">
            <summary>
            Add evaluation message to Cells document
            </summary>
            <param name="document">Cells document</param>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Cells.CellsConverter.LoadOptions">
            <summary>
            Document load options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Cells.CellsConverter.CellsSaveOptions">
            <summary>
            Cells conversion options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Cells.CellsConverter.PageNumber">
            <summary>
            Conversion start page
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Cells.CellsConverter.NumPageToConvert">
            <summary>
            Number of pages to convert starting from <see cref="P:GroupDocs.Conversion.Converter.Cells.CellsConverter.PageNumber"/>
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetImageConverter(System.String)">
            <summary>
            Get ImageConverter for specified file
            </summary>
            <param name="guid"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Image.ImageConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetImageConverter(System.IO.Stream,System.String)">
            <summary>
            Get ImageConverter for specified stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileName"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Image.ImageConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetImageConverter(System.IO.Stream,GroupDocs.Foundation.Domain.FileType)">
            <summary>
            Get ImageConverter for specified stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileType"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Image.ImageConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetPdfConverter(System.String)">
            <summary>
            Get PdfConverter for specified file
            </summary>
            <param name="guid"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Pdf.PdfConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetPdfConverter(System.IO.Stream,System.String)">
            <summary>
            Get PdfConverter for specified stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileName"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Pdf.PdfConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetPdfConverter(System.IO.Stream,GroupDocs.Foundation.Domain.FileType)">
            <summary>
            Get PdfConverter for specified stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileType"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Pdf.PdfConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetHtmlConverter(System.String)">
            <summary>
            Get HtmlConverter for specified file
            </summary>
            <param name="guid"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Html.HtmlConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetHtmlConverter(System.IO.Stream,System.String)">
            <summary>
            Get HtmlConverter for specified stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileName"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Html.HtmlConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetHtmlConverter(System.IO.Stream,GroupDocs.Foundation.Domain.FileType)">
            <summary>
            Get HtmlConverter for specified stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileType"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Html.HtmlConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetWordsConverter(System.String)">
            <summary>
            Get WordsConverter for specified file
            </summary>
            <param name="guid"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Words.WordsConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetWordsConverter(System.IO.Stream,System.String)">
            <summary>
            Get WordsConverter for specified stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileName"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Words.WordsConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetWordsConverter(System.IO.Stream,GroupDocs.Foundation.Domain.FileType)">
            <summary>
            Get WordsConverter for specified stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileType"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Words.WordsConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetCellsConverter(System.String)">
            <summary>
            Get CellsConverter for specified file
            </summary>
            <param name="guid"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Cells.CellsConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetCellsConverter(System.IO.Stream,System.String)">
            <summary>
            Get CellsConverter for specified stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileName"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Cells.CellsConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetCellsConverter(System.IO.Stream,GroupDocs.Foundation.Domain.FileType)">
            <summary>
            Get CellsConverter for specified stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileType"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Cells.CellsConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetSlidesConverter(System.String)">
            <summary>
            Get SlidesConverter for specified file
            </summary>
            <param name="guid"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Slides.SlidesConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetSlidesConverter(System.IO.Stream,System.String)">
            <summary>
            Get SlidesConverter for specified stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileName"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Slides.SlidesConverter"/></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.ConverterFactory.GetSlidesConverter(System.IO.Stream,GroupDocs.Foundation.Domain.FileType)">
            <summary>
            Get SlidesConverter for specified stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileType"></param>
            <returns><see cref="T:GroupDocs.Conversion.Converter.Slides.SlidesConverter"/></returns>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.ConverterFactory.InputDataHandler">
            <summary>
            Input data handler
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.ConverterFactory.OutputDataHandler">
            <summary>
            Output data handler
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.ConverterFactory.CacheDataHandler">
            <summary>
            Cache data handler
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Html.HtmlConverter">
            <summary>
            Provide a base for a custom Html converters. This is an abstract class.
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Html.HtmlConverter.PagesCount">
            <summary>
            Pages count
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Html.HtmlConverter.ConversionResultStream">
            <summary>
            Converted document as stream
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Html.HtmlConverter.ConversionResultString">
            <summary>
            Converted document as file path
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Html.HtmlConverter.#ctor(GroupDocs.Conversion.Domain.FileDescription,GroupDocs.Conversion.Handler.Input.IInputDataHandler,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate HtmlConverter to convert file with custom <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementations
            </summary>
            <param name="fileDescription">Instance of <see cref="T:GroupDocs.Conversion.Domain.FileDescription"/></param>
            <param name="inputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> interface</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Html.HtmlConverter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,System.String,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate HtmlConverter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileName">File name</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Html.HtmlConverter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,GroupDocs.Foundation.Domain.FileType,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate HtmlConverter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileType">File type of the source document</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Html.HtmlConverter.GetPageCount">
            <summary>
            Return page count of the document to be converted
            </summary>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Html.HtmlConverter.Convert``1(GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Convert document
            </summary>
            <typeparam name="T"></typeparam>
            <param name="htmlSaveOptions">Html conversion options</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Html.HtmlConverter.Convert``1(GroupDocs.Conversion.Converter.Option.LoadOptions,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Convert document
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loadOptions">Document load options</param>
            <param name="htmlSaveOptions">Html conversion options</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Html.HtmlConverter.CacheItemExistsHandler(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream)">
            <summary>
            Handle item if exist in cache
            </summary>
            <param name="inputStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Html.HtmlConverter.ValidateCache(System.Int32)">
            <summary>
            Validate if item exists in cache
            </summary>
            <param name="currentPage"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Html.HtmlConverter.GetImageFormat">
            <summary>
            Get image format from file extension
            </summary>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Html.HtmlConverter.AddEvaluationMessageToHtml(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsOutputStream,System.Int32)">
            <summary>
            Add evaluation message to html stream
            </summary>
            <param name="htmlStream">The result stream with added evaluation message</param>
            <param name="pageWidth">Page width</param>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Html.HtmlConverter.LoadOptions">
            <summary>
            Document load options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Html.HtmlConverter.HtmlSaveOptions">
            <summary>
            Html conversion options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Html.HtmlConverter.PageNumber">
            <summary>
            Conversion start page
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Html.HtmlConverter.NumPageToConvert">
            <summary>
            Number of pages to convert starting from <see cref="P:GroupDocs.Conversion.Converter.Html.HtmlConverter.PageNumber"/>
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Image.ImageConverter">
            <summary>
            Provide a base for a custom image converters. This is an abstract class.
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Image.ImageConverter.ConversionResultStream">
            <summary>
            Converted document as stream
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Image.ImageConverter.ConversionResultString">
            <summary>
            Converted document as file path
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Image.ImageConverter.PagesCount">
            <summary>
            Pages count
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Image.ImageConverter.#ctor(GroupDocs.Conversion.Domain.FileDescription,GroupDocs.Conversion.Handler.Input.IInputDataHandler,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate ImageConverter to convert file with custom <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementations
            </summary>
            <param name="fileDescription">Instance of <see cref="T:GroupDocs.Conversion.Domain.FileDescription"/></param>
            <param name="inputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> interface</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Image.ImageConverter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,System.String,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate ImageConverter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileName">File name</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Image.ImageConverter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,GroupDocs.Foundation.Domain.FileType,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate ImageConverter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileType">File type of the source document</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Image.ImageConverter.ValidateCache(System.Int32)">
            <summary>
            Validate if item exists in cache
            </summary>
            <param name="currentPage"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Image.ImageConverter.GetPageCount">
            <summary>
            Return page count of the document to be converted
            </summary>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Image.ImageConverter.Convert``1(GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Convert document
            </summary>
            <typeparam name="T"></typeparam>
            <param name="imageSaveOptions">Image conversion options</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Image.ImageConverter.Convert``1(GroupDocs.Conversion.Converter.Option.LoadOptions,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Convert document
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loadOptions">Document load options</param>
            <param name="imageSaveOptions">Image conversion options</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Image.ImageConverter.ResizeImageStream(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsOutputStream)">
            <summary>
            Resize image from stream to size set in <see cref="P:GroupDocs.Conversion.Converter.Image.ImageConverter.ImageSaveOptions"/>
            </summary>
            <param name="imageStream">Image stream to be resized</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Image.ImageConverter.ConvertPngToGif(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsOutputStream)">
            <summary>
            Convert PNG to GIF
            </summary>
            <param name="imageStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Image.ImageConverter.GetImageEncoderParameters">
            <summary>
            Get image encoder parameters depending on <see cref="T:System.Drawing.Imaging.ImageFormat"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Image.ImageConverter.AddWatermark(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsOutputStream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
            <summary>
            Add watermark to image stream
            </summary>
            <param name="imageStream">The image to add to a watermark</param>
            <param name="codecInfo">Image codec info as <see cref="T:System.Drawing.Imaging.ImageCodecInfo"/></param>
            <param name="encoderParameters">Encoder parameters as <see cref="T:System.Drawing.Imaging.EncoderParameters"/></param>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Image.ImageConverter.LoadOptions">
            <summary>
            Document load options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Image.ImageConverter.ImageSaveOptions">
            <summary>
            Image conversion options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Image.ImageConverter.PageNumber">
            <summary>
            Conversion start page
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Image.ImageConverter.NumPageToConvert">
            <summary>
            Number of pages to convert starting from <see cref="P:GroupDocs.Conversion.Converter.Image.ImageConverter.PageNumber"/>
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Image.ImageConverter.OutputImageFormat">
            <summary>
            Get output image format
            </summary>
            <returns></returns>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Image.ImageConverter.InputImageFormat">
            <summary>
            Get input image format
            </summary>
            <returns></returns>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.CellsSaveOptions">
            <summary>
            Options for to Cells conversion
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.SaveOptions">
            <summary>
            General conversion opitons class
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Option.SaveOptions.#ctor(GroupDocs.Conversion.Domain.ConversionType)">
            <summary>
            Create SaveOptions instance
            </summary>
            <param name="saveOptionsType"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Option.SaveOptions.Clone">
            <summary>
            Clone current instance
            </summary>
            <returns></returns>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.SaveOptions.SaveOptionsType">
            <summary>
            Shows for which output document type are the options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.SaveOptions.OutputType">
             <summary>
             Result type of the conversion - String or Stream
            
             default: Stream
             </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.SaveOptions.PageNumber">
            <summary>
            Start conversion from <c>PageNumber</c> page
            </summary>
            <remarks>default is 1</remarks>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.SaveOptions.NumPagesToConvert">
            <summary>
            Number of pages to convert
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.SaveOptions.UsePdf">
            <summary>
            If <c>true</c>, the input firstly is converted to PDF and after that to desired format
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.SaveOptions.ConvertFileType">
            <summary>
            The desired file type to which the input document should be converted to
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.SaveOptions.CustomName">
            <summary>
            If set it will be used as a name of the cached file
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.SaveOptions.WatermarkOptions">
            <summary>
            Watermark specific options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.SaveOptions.ShowGridLines">
            <summary>
            Show grid lines when converting Excel files
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.SaveOptions.ShowHiddenSheets">
            <summary>
            Show hidden sheets when converting Excel files
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Option.CellsSaveOptions.#ctor">
            <summary>
            Create CellsSaveOptions instance
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.CellsSaveOptions.ConvertFileType">
            <summary>
            The desired file type to which the input document should be converted to
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.CellsSaveOptions.Password">
            <summary>
            Set this property if you want to protect the converted document with a password
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.CellsSaveOptions.CellsFileType">
            <summary>
            Cells file types
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.CellsSaveOptions.CellsFileType.Xls">
            <summary>
            Xls
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.CellsSaveOptions.CellsFileType.Xlsx">
            <summary>
            Xlsx
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.CellsSaveOptions.CellsFileType.Xls2003">
            <summary>
            Xlsx
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.CellsSaveOptions.CellsFileType.Xlsm">
            <summary>
            Xlsm
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.CellsSaveOptions.CellsFileType.Xlsb">
            <summary>
            Xlsb
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.CellsSaveOptions.CellsFileType.Ods">
            <summary>
            Xlsb
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.CellsSaveOptions.CellsFileType.Csv">
            <summary>
            Csv
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.OutputType">
            <summary>
            Supported output types
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.OutputType.Stream">
            <summary>
            The output will be stream or list of streams
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.OutputType.String">
            <summary>
            The output will be file path as string
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.PsdOptions">
            <summary>
            Options for converting to Psd
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Option.PsdOptions.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PsdOptions.ChannelBitsCount">
            <summary>
            Bits count per color channel
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PsdOptions.ChannelsCount">
            <summary>
            Color channels count
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PsdOptions.ColorMode">
            <summary>
            Psd color mode
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PsdOptions.CompressionMethod">
            <summary>
            Psd compression method
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PsdOptions.Version">
            <summary>
            Psd file version
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.PsdOptions.ColorModes">
            <summary>
            Color modes enum
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PsdOptions.ColorModes.Bitmap">
            <summary>
            Bitmap
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PsdOptions.ColorModes.Grayscale">
            <summary>
            Grayscale
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PsdOptions.ColorModes.Indexed">
            <summary>
            Indexed
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PsdOptions.ColorModes.Rgb">
            <summary>
            RGB
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PsdOptions.ColorModes.Cmyk">
            <summary>
            CMYK
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PsdOptions.ColorModes.Multichannel">
            <summary>
            Multichannel
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PsdOptions.ColorModes.Duotone">
            <summary>
            Duotone
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PsdOptions.ColorModes.Lab">
            <summary>
            Lab
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.PsdOptions.CompressionMethods">
            <summary>
            Compression methods
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PsdOptions.CompressionMethods.Raw">
            <summary>
            RAW
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PsdOptions.CompressionMethods.Rle">
            <summary>
            RLE
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PsdOptions.CompressionMethods.ZipWithoutPrediction">
            <summary>
            ZipWithoutPrediction
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PsdOptions.CompressionMethods.ZipWithPrediction">
            <summary>
            ZipWithPrediction
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.TiffOptions">
            <summary>
            Options for converting to TIFF
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.TiffOptions.Compression">
            <summary>
            Set Tiff compression
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.TiffOptions.TiffCompression">
            <summary>
            
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.TiffOptions.TiffCompression.Lzw">
            <summary>
            LZW compression
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.TiffOptions.TiffCompression.None">
            <summary>
            No compression
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.TiffOptions.TiffCompression.Ccitt3">
            <summary>
            CCITT3 compression
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.TiffOptions.TiffCompression.Ccitt4">
            <summary>
            CCITT4 compression
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.TiffOptions.TiffCompression.Rle">
            <summary>
            RLE compression
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.WatermarkOptions">
            <summary>
            Options for settings watermark to the converted document
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Option.WatermarkOptions.#ctor(System.String)">
            <summary>
            Create WatermarkOptions class and set watermark text
            </summary>
            <param name="watermarkText"></param>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WatermarkOptions.Text">
            <summary>
            Watermark text
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WatermarkOptions.Font">
            <summary>
            Watermark font name
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WatermarkOptions.Color">
            <summary>
            Watermark font color
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WatermarkOptions.Width">
            <summary>
            Watermark width
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WatermarkOptions.Height">
            <summary>
            Watermark height
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WatermarkOptions.Top">
            <summary>
            Watermark top position
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WatermarkOptions.Left">
            <summary>
            Watermark left position
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WatermarkOptions.RotationAngle">
            <summary>
            Watermark rotation angle
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WatermarkOptions.Transparency">
            <summary>
            Watermark transparency. Value between 0 and 1. Value 0 is fully visible, value 1 is invisible.
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Domain.ConversionType">
            <summary>
            Enum for setting conversion type
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Domain.ConversionType.Words">
            <summary>
            Words
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Domain.ConversionType.Pdf">
            <summary>
            Pdf
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Domain.ConversionType.Slides">
            <summary>
            Slides
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Domain.ConversionType.Cells">
            <summary>
            Cells
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Domain.ConversionType.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Domain.ConversionType.Html">
            <summary>
            Html
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.HtmlSaveOptions">
            <summary>
            Options for to Html conversion
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Option.HtmlSaveOptions.#ctor">
            <summary>
            Create HtmlSaveOptions instance
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.HtmlSaveOptions.UsePdf">
            <summary>
            If <c>true</c>, the input firstly is converted to PDF and after that to desired format
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.HtmlSaveOptions.ConvertFileType">
            <summary>
            The desired file type to which the input document should be converted to
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.HtmlSaveOptions.PageMode">
            <summary>
            If true the conversion result will be set of streams/files for each page
            If false only one stream/file will be returned
            Default: false
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.HtmlSaveOptions.HtmlFileType">
            <summary>
            Pdf file types
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.HtmlSaveOptions.HtmlFileType.Html">
            <summary>
            Html
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.ImageSaveOptions">
            <summary>
            Options for to Image conversion
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.#ctor">
            <summary>
            Create ImageSaveOptions instance
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.UseWidthForCustomName">
            <summary>
            If <c>true</c> the width of the page will be added to the CustomName when generating the caching file name.
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.Width">
            <summary>
            Desired image width after conversion
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.Height">
            <summary>
            Desired image height after conversion
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.UsePdf">
            <summary>
            If <c>true</c>, the input firstly is converted to PDF and after that to desired format
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.ConvertFileType">
            <summary>
            The desired file type to which the input document should be converted to
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.Dpi">
            <summary>
            Desired image DPI after conversion. The default resolution is: 300dpi
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.JpegQuality">
            <summary>
            Desired image quality when converting to Jpeg. The value must be between 0 and 100. The default value is 100.
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.TiffOptions">
            <summary>
            Tiff specific convert options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.PsdOptions">
            <summary>
            Psd specific convert options
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.ImageFileType">
            <summary>
            Image file types
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.ImageFileType.Tiff">
            <summary>
            Tiff
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.ImageFileType.Tif">
            <summary>
            Tif
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.ImageFileType.Jpg">
            <summary>
            Jpg
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.ImageFileType.Jpeg">
            <summary>
            Jpeg
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.ImageFileType.Png">
            <summary>
            Png
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.ImageFileType.Gif">
            <summary>
            Gif
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.ImageFileType.Bmp">
            <summary>
            Bmp
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.ImageFileType.Ico">
            <summary>
            Ico
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.ImageSaveOptions.ImageFileType.Psd">
            <summary>
            Psd
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.LoadOptions">
            <summary>
            Load document options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.LoadOptions.Password">
            <summary>
            Set password to unprotect protected document
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.SlidesSaveOptions">
            <summary>
            Options for to Slides converison
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Option.SlidesSaveOptions.#ctor">
            <summary>
            Create SlidesSaveOptions instance
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.SlidesSaveOptions.ConvertFileType">
            <summary>
            The desired file type to which the input document should be converted to
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.SlidesSaveOptions.Password">
            <summary>
            Set this property if you want to protect the converted document with a password
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.SlidesSaveOptions.SlidesFileType">
            <summary>
            Slides file types
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.SlidesSaveOptions.SlidesFileType.Ppt">
            <summary>
            Ppt
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.SlidesSaveOptions.SlidesFileType.Pps">
            <summary>
            Pps
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.SlidesSaveOptions.SlidesFileType.Pptx">
            <summary>
            Pptx
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.SlidesSaveOptions.SlidesFileType.Ppsx">
            <summary>
            Ppsx
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.SlidesSaveOptions.SlidesFileType.Odp">
            <summary>
            Odp
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.WordsSaveOptions">
            <summary>
            Options for to Word converison
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.#ctor">
            <summary>
            Create WordsSaveOptions instance
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.ConvertFileType">
            <summary>
            The desired file type to which the input document should be converted to
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.Width">
            <summary>
            Desired page width after conversion
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.Height">
            <summary>
            Desired page height after conversion
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.Dpi">
            <summary>
            Desired page DPI after conversion. The default resolution is: 96dpi
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.Password">
            <summary>
            Set this property if you want to protect the converted document with a password
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.WordsFileType">
            <summary>
            Words file types
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.WordsFileType.Doc">
            <summary>
            Doc
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.WordsFileType.Docm">
            <summary>
            Docm
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.WordsFileType.Docx">
            <summary>
            Docx
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.WordsFileType.Dot">
            <summary>
            Dot
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.WordsFileType.Dotm">
            <summary>
            Dotm
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.WordsFileType.Dotx">
            <summary>
            Dotx
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.WordsFileType.Rtf">
            <summary>
            Rtf
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.WordsFileType.Txt">
            <summary>
            Txt
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.WordsFileType.Odt">
            <summary>
            Odt
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.WordsSaveOptions.WordsFileType.Ott">
            <summary>
            Ott
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.PdfSaveOptions">
            <summary>
            Options for to PDF converison
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.#ctor">
            <summary>
            Create PdfSaveOptions instance
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.ConvertFileType">
            <summary>
            The desired file type to which the input document should be converted to
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.WordBookmarks">
            <summary>
            If the input document is Word the conversion will handle the word bookmarks regarding this option.
            Use <see cref="T:GroupDocs.Conversion.Domain.WordBookmarks">WordBookmarks</see> to set desired behavior
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.Width">
            <summary>
            Desired page width in pixels after conversion
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.Height">
            <summary>
            Desired page height in pixels after conversion
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.Dpi">
            <summary>
            Desired page DPI after conversion. The default resolution is: 96dpi
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.Password">
            <summary>
            Set this property if you want to protect the converted document with a password
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.MarginTop">
            <summary>
            Desired page top margin in pixels after conversion
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.MarginBottom">
            <summary>
            Desired page bottom margin in pixels after conversion
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.MarginLeft">
            <summary>
            Desired page left margin in pixels after conversion
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.MarginRight">
            <summary>
            Desired page right margin in pixels after conversion
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.PageMode">
            <summary>
            If true the conversion result will be set of streams/files for each page
            If false only one stream/file will be returned
            Default: false
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.PdfFileType">
            <summary>
            Pdf file types
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.PdfFileType.Pdf">
            <summary>
            Pdf
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Option.PdfSaveOptions.PdfFileType.Epub">
            <summary>
            Epub
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Slides.SlidesConverter">
            <summary>
            Provide a base for a custom Slides converters. This is an abstract class.
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Slides.SlidesConverter.PagesCount">
            <summary>
            Pages count
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Slides.SlidesConverter.ConversionResultStream">
            <summary>
            Converted document as stream
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Slides.SlidesConverter.ConversionResultString">
            <summary>
            Converted document as file path
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Slides.SlidesConverter.#ctor(GroupDocs.Conversion.Domain.FileDescription,GroupDocs.Conversion.Handler.Input.IInputDataHandler,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate SlidesConverter to convert file with custom <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementations
            </summary>
            <param name="fileDescription">Instance of <see cref="T:GroupDocs.Conversion.Domain.FileDescription"/></param>
            <param name="inputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> interface</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Slides.SlidesConverter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,System.String,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate SlidesConverter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileName">File name</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Slides.SlidesConverter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,GroupDocs.Foundation.Domain.FileType,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate SlidesConverter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileType">File type of the source document</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Slides.SlidesConverter.Convert``1(GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Convert document
            </summary>
            <typeparam name="T"></typeparam>
            <param name="slidesSaveOptions">Slides conversion options</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Slides.SlidesConverter.Convert``1(GroupDocs.Conversion.Converter.Option.LoadOptions,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Convert document
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loadOptions">Document load options</param>
            <param name="slidesSaveOptions">Slides conversion options</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Slides.SlidesConverter.GetPageCount">
            <summary>
            Return page count of the document to be converted
            </summary>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Slides.SlidesConverter.CacheItemExistsHandler(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream)">
            <summary>
            Handle item if exist in cache
            </summary>
            <param name="inputStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Slides.SlidesConverter.CacheItemNotExistsHandler(System.Int32,GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsOutputStream)">
            <summary>
            Handle item if not exist in cache
            </summary>
            <param name="currentPage"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Slides.SlidesConverter.ValidateCache(System.Int32)">
            <summary>
            Validate if item exists in cache
            </summary>
            <param name="currentPage"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Slides.SlidesConverter.GetSaveFormat">
            <summary>
            Returns the SaveFormat depending of used SlidesOptions
            </summary>
            <returns></returns>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Slides.SlidesConverter.LoadOptions">
            <summary>
            Document load options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Slides.SlidesConverter.SlidesSaveOptions">
            <summary>
            Slides conversion options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Slides.SlidesConverter.PageNumber">
            <summary>
            Conversion start page
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Slides.SlidesConverter.NumPageToConvert">
            <summary>
            Number of pages to convert starting from <see cref="P:GroupDocs.Conversion.Converter.Slides.SlidesConverter.PageNumber"/>
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Pdf.PdfConverter">
            <summary>
            Provide a base for a custom Pdf converters. This is an abstract class.
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Pdf.PdfConverter.PagesCount">
            <summary>
            Pages count
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Pdf.PdfConverter.ConversionResultStream">
            <summary>
            Converted document as stream
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Pdf.PdfConverter.ConversionResultString">
            <summary>
            Converted document as file path
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Pdf.PdfConverter.#ctor(GroupDocs.Conversion.Domain.FileDescription,GroupDocs.Conversion.Handler.Input.IInputDataHandler,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate PdfConverter to convert file with custom <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementations
            </summary>
            <param name="fileDescription">Instance of <see cref="T:GroupDocs.Conversion.Domain.FileDescription"/></param>
            <param name="inputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> interface</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Pdf.PdfConverter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,System.String,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate PdfConverter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileName">File name</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Pdf.PdfConverter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,GroupDocs.Foundation.Domain.FileType,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate PdfConverter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileType">File type of the source document</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Pdf.PdfConverter.Convert``1(GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Convert document
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pdfSaveOptions">Pdf conversion options</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Pdf.PdfConverter.Convert``1(GroupDocs.Conversion.Converter.Option.LoadOptions,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Convert document
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loadOptions">Document load options</param>
            <param name="pdfSaveOptions">Pdf conversion options</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Pdf.PdfConverter.GetPageCount">
            <summary>
            Return page count of the document to be converted
            </summary>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Pdf.PdfConverter.CacheItemExistsHandler(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream)">
            <summary>
            Handle item if exist in cache
            </summary>
            <param name="inputStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Pdf.PdfConverter.CacheItemNotExistsHandler(System.Int32,GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsOutputStream)">
            <summary>
            Handle item if exist in cache
            </summary>
            <param name="currentPage"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Pdf.PdfConverter.ValidateCache(System.Int32)">
            <summary>
            Validate if item exists in cache
            </summary>
            <param name="currentPage"></param>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Pdf.PdfConverter.LoadOptions">
            <summary>
            Document load options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Pdf.PdfConverter.PdfSaveOptions">
            <summary>
            Pdf conversion options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Pdf.PdfConverter.PageNumber">
            <summary>
            Conversion start page
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Pdf.PdfConverter.NumPageToConvert">
            <summary>
            Number of pages to convert starting from <see cref="P:GroupDocs.Conversion.Converter.Pdf.PdfConverter.PageNumber"/>
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Words.WordsConverter">
            <summary>
            Provide a base for a custom Words converters. This is an abstract class.
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Words.WordsConverter.PagesCount">
            <summary>
            Pages count
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Words.WordsConverter.ConversionResultStream">
            <summary>
            Converted document as stream
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Converter.Words.WordsConverter.ConversionResultString">
            <summary>
            Converted document as file path
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.WordsConverter.#ctor(GroupDocs.Conversion.Domain.FileDescription,GroupDocs.Conversion.Handler.Input.IInputDataHandler,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate WordConverter to convert file with custom <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementations
            </summary>
            <param name="fileDescription">Instance of <see cref="T:GroupDocs.Conversion.Domain.FileDescription"/></param>
            <param name="inputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> interface</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.WordsConverter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,System.String,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate WordConverter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileName">File name</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.WordsConverter.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream,GroupDocs.Foundation.Domain.FileType,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate WordConverter to convert stream with custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="fileStream">Instance of <see cref="T:GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream"/></param>
            <param name="fileType">File type of the source document</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.WordsConverter.Convert``1(GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Convert document
            </summary>
            <typeparam name="T"></typeparam>
            <param name="wordsSaveOptions">Words conversion options</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.WordsConverter.Convert``1(GroupDocs.Conversion.Converter.Option.LoadOptions,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Convert document
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loadOptions">Document load options</param>
            <param name="wordsSaveOptions">Words conversion options</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.WordsConverter.GetPageCount">
            <summary>
            Return page count of the document to be converted
            </summary>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.WordsConverter.CacheItemExistsHandler(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream)">
            <summary>
            Handle item if exist in cache
            </summary>
            <param name="inputStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.WordsConverter.CacheItemNotExistsHandler(System.Int32,GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsOutputStream)">
            <summary>
            Handle item if not exist in cache
            </summary>
            <param name="currentPage"></param>
            <param name="outputStream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.WordsConverter.ValidateCache(System.Int32)">
            <summary>
            Validate if item exists in cache
            </summary>
            <param name="currentPage"></param>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Words.WordsConverter.LoadOptions">
            <summary>
            Document load options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Words.WordsConverter.WordsSaveOptions">
            <summary>
            Words conversion options
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Words.WordsConverter.PageNumber">
            <summary>
            Conversion start page
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Words.WordsConverter.NumPageToConvert">
            <summary>
            Number of pages to convert starting from <see cref="P:GroupDocs.Conversion.Converter.Words.WordsConverter.PageNumber"/>
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Words.FieldPair">
            <summary>
            Holds a pair of related fields.
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Words.PageNumberFinder">
            <summary>
            Provides methods for extracting nodes of a document which are rendered on a specified pages.
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.PageNumberFinder.#ctor(Aspose.Words.Layout.LayoutCollector)">
            <summary>
            Initializes new instance of this class.
            </summary>
            <param name="collector">A collector instance which has layout model records for the document.</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.PageNumberFinder.GetPage(Aspose.Words.Node)">
            <summary>
            Retrieves 1-based index of a page that the node begins on.
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.PageNumberFinder.GetPageEnd(Aspose.Words.Node)">
            <summary>
            Retrieves 1-based index of a page that the node ends on.
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.PageNumberFinder.PageSpan(Aspose.Words.Node)">
            <summary>
            Returns how many pages the specified node spans over. Returns 1 if the node is contained within one page.
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.PageNumberFinder.RetrieveAllNodesOnPages(System.Int32,System.Int32,Aspose.Words.NodeType)">
            <summary>
            Returns a list of nodes that are contained anywhere on the specified page or pages which match the specified node type.
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.PageNumberFinder.SplitNodesAcrossPages">
            <summary>
            Splits nodes which appear over two or more pages into separate nodes so that they still appear in the same way
            but no longer appear across a page.
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.PageNumberFinder.AddPageNumbersForNode(Aspose.Words.Node,System.Int32,System.Int32)">
            <summary>
            This is called by <see cref="T:GroupDocs.Conversion.Converter.Words.SectionSplitter"/> to update page numbers of split nodes.
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Words.PageNumberFinder.Document">
            <summary>
            Gets the document this instance works with.
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Words.DocumentPageSplitter">
            <summary>
            Splits a document into multiple documents, one per page.
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.DocumentPageSplitter.#ctor(Aspose.Words.Layout.LayoutCollector)">
            <summary>
            Initializes new instance of this class. This method splits the document into sections so that each page
            begins and ends at a section boundary. It is recommended not to modify the document afterwards.
            </summary>
            <param name="collector">A collector instance which has layout model records for the document.</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.DocumentPageSplitter.GetDocumentOfPage(System.Int32)">
            <summary>
            Gets the document of a page.
            </summary>
            <param name="pageIndex">1-based index of a page.</param>
        </member>
        <member name="M:GroupDocs.Conversion.Converter.Words.DocumentPageSplitter.GetDocumentOfPageRange(System.Int32,System.Int32)">
            <summary>
            Gets the document of a page range.
            </summary>
            <param name="startIndex">1-based index of the start page.</param>
            <param name="endIndex">1-based index of the end page.</param>
        </member>
        <member name="P:GroupDocs.Conversion.Converter.Words.DocumentPageSplitter.Document">
            <summary>
            Gets the document this instance works with.
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Converter.Words.SectionSplitter">
            <summary>
            Splits a document into multiple sections so that each page begins and ends at a section boundary.
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Domain.CacheFileDescription">
            <summary>
            Properties of the cached file
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Domain.FileDescription">
            <summary>
            Properties of the file to be converted
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Domain.FileDescription.Guid">
            <summary>
            File guid
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Domain.FileDescription.Name">
            <summary>
            File name
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Domain.FileDescription.Size">
            <summary>
            File size
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Domain.FileDescription.LastModified">
            <summary>
            Last modified
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Domain.FileDescription.BaseName">
            <summary>
            File name without extension
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Domain.FileDescription.Extension">
            <summary>
            File extension
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Domain.CacheFileDescription.SaveOptions">
            <summary>
            Conversion options
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Domain.WordBookmarks">
            <summary>
            Options for handling Bookmarks in Word to PDF conversions
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Domain.WordBookmarks.Headings">
            <summary>
            Word headings const string
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Domain.WordBookmarks.Bookmarks">
            <summary>
            Word bookmarks const string
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Exception.CorruptOrDamagedFileException">
            <summary>
            Groupdocs exception thrown when the file is corrupt or damaged
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Exception.CorruptOrDamagedFileException.#ctor(GroupDocs.Conversion.Domain.FileDescription)">
            <summary>
            Create exception instance
            </summary>
            <param name="fileDescription">Instance of <see cref="P:GroupDocs.Conversion.Exception.CorruptOrDamagedFileException.FileDescription"/></param>
        </member>
        <member name="M:GroupDocs.Conversion.Exception.CorruptOrDamagedFileException.#ctor(System.String)">
            <summary>
            Create exception instance with message
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:GroupDocs.Conversion.Exception.CorruptOrDamagedFileException.FileDescription">
            <summary>
            File description instance
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Exception.FileTypeNotSupportedException">
            <summary>
            Groupdocs exception thrown when the file type is not supported
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Exception.FileTypeNotSupportedException.#ctor(GroupDocs.Conversion.Domain.FileDescription)">
            <summary>
            Create exception instance
            </summary>
            <param name="fileDescription">Instance of <see cref="P:GroupDocs.Conversion.Exception.FileTypeNotSupportedException.FileDescription"/></param>
        </member>
        <member name="M:GroupDocs.Conversion.Exception.FileTypeNotSupportedException.#ctor(System.String)">
            <summary>
            Create exception instance with message
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:GroupDocs.Conversion.Exception.FileTypeNotSupportedException.FileDescription">
            <summary>
            File description instance
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Exception.PasswordProtectedException">
            <summary>
            Groupdocs exception thrown when the file is password protected
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Exception.PasswordProtectedException.#ctor(GroupDocs.Conversion.Domain.FileDescription)">
            <summary>
            Create exception instance
            </summary>
            <param name="fileDescription">Instance of <see cref="P:GroupDocs.Conversion.Exception.PasswordProtectedException.FileDescription"/></param>
        </member>
        <member name="P:GroupDocs.Conversion.Exception.PasswordProtectedException.FileDescription">
            <summary>
            File description instance
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler">
            <summary>
            Implement this interface to provide custom cache storage for GroupDocs.Conversion
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler.Exists(GroupDocs.Conversion.Domain.CacheFileDescription)">
            <summary>
            Checks if exists file with specified CacheFileDescription
            </summary>
            <param name="cacheFileDescription"></param>
            <returns>true or false</returns>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler.GetInputStream(GroupDocs.Conversion.Domain.CacheFileDescription)">
            <summary>
            Gets stream for CacheFileDescription. This stream usually should be only for reading.
            </summary>
            <param name="cacheFileDescription"></param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler.GetOutputSaveStream(GroupDocs.Conversion.Domain.CacheFileDescription)">
            <summary>
            Gets stream for CacheFileDescription. This stream usually should be only for writting.
            </summary>
            <param name="cacheFileDescription"></param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler.GetCacheUri(GroupDocs.Conversion.Domain.CacheFileDescription)">
            <summary>
            Get the URI for the CacheFileDescription
            </summary>
            <param name="cacheFileDescription"></param>
            <returns></returns>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.CellsConversionCompleteEventArgs">
            <summary>
            Provides data for Cells ConversionComplete event
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.ConversionCompleteEventArgs">
            <summary>
            Provides data for ConversionComplete event
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.ConversionEventArgs">
            <summary>
            Base class for all events args
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.ConversionEventArgs.ConversionGuid">
            <summary>
            Represents unique identifier of a conversion
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.ConversionEventArgs.Status">
            <summary>
            Indicates current conversion state
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionCompleteEventArgs.#ctor(GroupDocs.Conversion.Domain.ConversionType)">
            <summary>
            Default constructor
            </summary>
            <param name="conversionType"></param>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.ConversionCompleteEventArgs.ConversionType">
            <summary>
            Type of conversion
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.ConversionCompleteEventArgs.UsedCache">
            <summary>
            True it the result is returned from cache
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.CellsConversionCompleteEventArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.CellsConversionCompleteEventArgs.SheetCount">
            <summary>
            Total sheets count in converted document
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.ConversionCompleteHandler">
            <summary>
            Represents a method which will handle ConversionComplete event
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.ConversionHandler">
            <summary>
            Create instanse of ConversionHandler class to convert between different file formats
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.#ctor(GroupDocs.Conversion.Config.ConversionConfig)">
            <summary>
            Instantiate the ConversionHandler with default <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/>, <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/>
            All files will be loaded from localfile system
            All cache items will be stored and loaded from local data system
            </summary>
            <param name="conversionConfig">Instance of <see cref="T:GroupDocs.Conversion.Config.ConversionConfig"/></param>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.#ctor(GroupDocs.Conversion.Config.ConversionConfig,GroupDocs.Conversion.Handler.Input.IInputDataHandler)">
            <summary>
            Instantiate the ConversionHandler with default <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/>, <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> and custom <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> implementation
            </summary>
            <param name="conversionConfig">Instance of <see cref="T:GroupDocs.Conversion.Config.ConversionConfig"/></param>
            <param name="inputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.#ctor(GroupDocs.Conversion.Config.ConversionConfig,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate the ConversionHandler with default <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/>, <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and custom <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="conversionConfig">Instance of <see cref="T:GroupDocs.Conversion.Config.ConversionConfig"/></param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.#ctor(GroupDocs.Conversion.Config.ConversionConfig,GroupDocs.Conversion.Handler.Output.IOutputDataHandler)">
            <summary>
            Instantiate the ConversionHandler with default <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/>, <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> and custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> implementation
            </summary>
            <param name="conversionConfig">Instance of <see cref="T:GroupDocs.Conversion.Config.ConversionConfig"/></param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.#ctor(GroupDocs.Conversion.Config.ConversionConfig,GroupDocs.Conversion.Handler.Input.IInputDataHandler,GroupDocs.Conversion.Handler.Output.IOutputDataHandler)">
            <summary>
            Instantiate the ConversionHandler with default <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> and custom <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/>, <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> implementation
            </summary>
            <param name="conversionConfig">Instance of <see cref="T:GroupDocs.Conversion.Config.ConversionConfig"/></param>
            <param name="inputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> interface</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.#ctor(GroupDocs.Conversion.Config.ConversionConfig,GroupDocs.Conversion.Handler.Input.IInputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate the ConversionHandler with default <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and custom <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/>, <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="conversionConfig">Instance of <see cref="T:GroupDocs.Conversion.Config.ConversionConfig"/></param>
            <param name="inputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.#ctor(GroupDocs.Conversion.Config.ConversionConfig,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate the ConversionHandler with default <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> and custom <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/>, <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementation
            </summary>
            <param name="conversionConfig">Instance of <see cref="T:GroupDocs.Conversion.Config.ConversionConfig"/></param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.#ctor(GroupDocs.Conversion.Config.ConversionConfig,GroupDocs.Conversion.Handler.Input.IInputDataHandler,GroupDocs.Conversion.Handler.Output.IOutputDataHandler,GroupDocs.Conversion.Handler.Cache.ICacheDataHandler)">
            <summary>
            Instantiate the ConversionHandler with custom <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/>, <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> and custom <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> implementations
            </summary>
            <param name="conversionConfig">Instance of <see cref="T:GroupDocs.Conversion.Config.ConversionConfig"/></param>
            <param name="inputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler"/> interface</param>
            <param name="outputDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler"/> interface</param>
            <param name="cacheDataHandler">Custom implementation of <see cref="T:GroupDocs.Conversion.Handler.Cache.ICacheDataHandler"/> interface</param>
        </member>
        <member name="F:GroupDocs.Conversion.Handler.ConversionHandler.LocaleHandler">
            <summary>
            Locale handler
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.Convert``1(System.String,GroupDocs.Conversion.Converter.Option.LoadOptions,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Converts the file specified by the guid
            </summary>
            <param name="guid"></param>
            <param name="loadOptions"></param>
            <param name="saveOptions"></param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.Convert``1(System.String,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Converts the file specified by the guid
            </summary>
            <param name="guid"></param>
            <param name="saveOptions"></param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.Convert``1(System.IO.Stream,System.String,GroupDocs.Conversion.Converter.Option.LoadOptions,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Converts the content of the stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileName"></param>
            <param name="loadOptions"></param>
            <param name="saveOptions"></param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.Convert``1(System.IO.Stream,System.String,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Converts the content of the stream
            </summary>
            <param name="fileStream"></param>
            <param name="fileName"></param>
            <param name="saveOptions"></param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.Convert``1(System.IO.Stream,GroupDocs.Conversion.Converter.Option.LoadOptions,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Converts the content of the stream
            </summary>
            <param name="fileStream"></param>
            <param name="loadOptions"></param>
            <param name="saveOptions"></param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.Convert``1(System.IO.Stream,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Converts the content of the stream
            </summary>
            <param name="fileStream"></param>
            <param name="saveOptions"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.SetConversionProgressListener(GroupDocs.Conversion.Handler.IConversionProgressListener)">
            <summary>
            Set conversion progress listener
            </summary>
            <param name="progressListener"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.SetConversionStatusListener(GroupDocs.Conversion.Handler.IConversionStatusListener)">
            <summary>
            Set conversion status listener
            </summary>
            <param name="statusListener"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.GetSaveOptions(System.String)">
            <summary>
            Return all possible conversions for provided source document type
            </summary>
            <param name="sourceDocumentExtension">Source document extension</param>
            <returns></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ConversionHandler.GetSaveOptions(System.IO.Stream)">
            <summary>
            Return all possible conversions for provided source document type
            </summary>
            <param name="sourceDocument">Source document stream</param>
            <returns></returns>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.ConversionHandler.Config">
            <summary>
            Conversion config
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.ConversionHandler.InputDataHandler">
            <summary>
            Input data handler
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.ConversionHandler.OutputDataHandler">
            <summary>
            Output data handler
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.ConversionHandler.CacheDataHandler">
            <summary>
            Cache data handler
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.ConversionHandler.FoundationHandler">
            <summary>
            Foundation handler
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.ConversionHandler.ConverterFactory">
            <summary>
            Converter factory
            </summary>
        </member>
        <member name="E:GroupDocs.Conversion.Handler.ConversionHandler.ConversionStart">
            <summary>
            Occurs when conversion starts
            </summary>
        </member>
        <member name="E:GroupDocs.Conversion.Handler.ConversionHandler.ConversionProgress">
            <summary>
            Occurs when ConversionProgress is changed
            </summary>
        </member>
        <member name="E:GroupDocs.Conversion.Handler.ConversionHandler.ConversionComplete">
            <summary>
            Occurs when conversion is complete
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.ConversionStartHandler">
            <summary>
            Represents a method which will handle ConversionStart event
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.ConversionStartEventArgs">
            <summary>
            Provides data for ConversionStart event
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.ConversionStatus">
            <summary>
            Possible states of conversion process
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Handler.ConversionStatus.Started">
            <summary>
            Covnersion have been just started
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Handler.ConversionStatus.InProgress">
            <summary>
            Conversion is in progress
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.Handler.ConversionStatus.Completed">
            <summary>
            Conversion completed
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.HtmlConversionCompleteEventArgs">
            <summary>
            Provides data for Html ConversionComplete event
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.HtmlConversionCompleteEventArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.IConversionProgressListener">
            <summary>
            Implement this interface to receive updates for changes in conversion progress
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.IConversionProgressListener.ConversionProgressChanged(GroupDocs.Conversion.Handler.ConversionProgressEventArgs)">
            <summary>
            Implement this method to receive changes of conversion progress
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.IConversionStatusListener">
            <summary>
            Implement this interface to receive updates for changes in conversion status
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.IConversionStatusListener.ConversionStatusChanged(GroupDocs.Conversion.Handler.ConversionEventArgs)">
            <summary>
            Implement this method to receive updates for changes in conversion status
            </summary>
            <param name="conversionStatus"></param>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.ImageConversionCompleteEventArgs">
            <summary>
            Provides data for Image ConversionComplete event
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.ImageConversionCompleteEventArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.ImageConversionCompleteEventArgs.ImageCount">
            <summary>
            Total image count
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.Input.IInputDataHandler">
            <summary>
            Implement this interface to provide custom way of loading of the input file. E.g. from Amazon S3
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.Input.IInputDataHandler.GetFileDescription(System.String)">
            <summary>
            Get properties of the input file by guid
            </summary>
            <param name="guid">Unique identifier of the input file.</param>
            <returns><seealso cref="T:GroupDocs.Conversion.Domain.FileDescription">FileDescription</seealso></returns>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.Input.IInputDataHandler.GetFile(System.String)">
            <summary>
            Get stream for the file specified by guid
            </summary>
            <param name="guid">Unique identifier of the input file.</param>
            <returns></returns>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.LocaleHandler">
            <summary>
            Instantiate this class to set string localization
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.LocaleHandler.#ctor(System.String)">
            <summary>
            Instantiate LocaleHandler class
            </summary>
            <param name="localePath">Path of the localization files</param>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.LocaleHandler.#ctor(System.String,GroupDocs.Foundation.Utils.Wrapper.FileSystem.IFileSystem)">
            <summary>
            Instantiate LocaleHandler with custom <see cref="T:GroupDocs.Foundation.Utils.Wrapper.FileSystem.IFileSystem"/> implementation
            </summary>
            <param name="localePath"></param>
            <param name="fileSystem"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.LocaleHandler.#ctor(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream)">
            <summary>
            Instantiate LocaleHandler with Stream
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.LocaleHandler.GetKey(System.String)">
            <summary>
            Return string localization by key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.Output.IOutputDataHandler">
            <summary>
            Implement this interface to provide custom way of saving of the output file. E.g. to Amazon S3
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.Output.IOutputDataHandler.SaveFile(GroupDocs.Conversion.Domain.FileDescription,System.IO.Stream,GroupDocs.Conversion.Converter.Option.SaveOptions)">
            <summary>
            Save stream to location specified by the fileDescription parameter.
            </summary>
            <param name="fileDescription">FileDescription for the output file</param>
            <param name="stream">Content of the converted document</param>
            <param name="saveOptions"></param>
            <returns>The path of the saved converted document</returns>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.PdfConversionCompleteEventArgs">
            <summary>
            Provides data for PDF ConversionComplete event
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.PdfConversionCompleteEventArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.PdfConversionCompleteEventArgs.PageCount">
            <summary>
            Total pages count in converted document
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.ConversionProgressHandler">
            <summary>
            Represents a method which will handle ConversionProgress event
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.ConversionProgressEventArgs">
            <summary>
            Provides data for ConversionProgress event
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.ConversionProgressEventArgs.Progress">
            <summary>
            overall conversion progress in percents
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.SlidesConversionCompleteEventArgs">
            <summary>
            Provides data for Slides ConversionComplete event
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.SlidesConversionCompleteEventArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.SlidesConversionCompleteEventArgs.SlideCount">
            <summary>
            Total slides count in converted document
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.Handler.WordsConversionCompleteEventArgs">
            <summary>
            Provides data for Words ConversionComplete event
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.Handler.WordsConversionCompleteEventArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:GroupDocs.Conversion.Handler.WordsConversionCompleteEventArgs.PageCount">
            <summary>
            Total pages count in converted document
            </summary>
        </member>
        <member name="T:GroupDocs.Conversion.License">
            <summary>
            Set GroupDocs.Conversion license
            </summary>
        </member>
        <member name="F:GroupDocs.Conversion.License.Handler">
            <summary>
            The handler
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.License.#cctor">
            <summary>
            Initializes static members of the <see cref="T:GroupDocs.Conversion.License"/> class.
            </summary>
        </member>
        <member name="M:GroupDocs.Conversion.License.SetLicense(System.IO.Stream)">
            <summary>
            Sets the license.
            </summary>
            <param name="licenseStream">The license stream.</param>
        </member>
        <member name="M:GroupDocs.Conversion.License.SetLicense(System.String)">
            <summary>
            Sets the license.
            </summary>
            <param name="licensePath">The license path.</param>
        </member>
        <member name="M:GroupDocs.Conversion.License.SetLicenseFromStream(GroupDocs.Foundation.Utils.Wrapper.Stream.GroupDocsInputStream)">
            <summary>
            Sets the license from GroupDocsInputStream
            </summary>
            <param name="licenseStream">The license GroupDocsInputStream.</param>
        </member>
        <member name="M:GroupDocs.Conversion.License.GetFileNameInFolderOfAssembly(System.String,System.Reflection.Assembly)">
            <summary>
            Gets the file name in folder of assembly.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="assembly">The assembly.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:GroupDocs.Conversion.License.GetAssemblyPath(System.Reflection.Assembly)">
            <summary>
            Returns assembly path correctly even if the assembly is shadow-copied.
            Uses CodeBase instead of Location for that.
            </summary>
            <param name="assembly">The assembly.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:GroupDocs.Conversion.License.IsValidLicense">
            <summary>
            Gets a value indicating whether this instance is valid license.
            </summary>
            <value><c>true</c> if this instance is valid license; otherwise, <c>false</c>.</value>
        </member>
    </members>
</doc>
